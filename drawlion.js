function drawLion(scale) {
	var canvas = document.getElementById("canvas");
	var ctx = canvas.getContext("2d");
	ctx.scale(scale, scale);
	ctx.save();
	ctx.strokeStyle = "rgba(0,0,0,0)";
	ctx.miterLimit = 4;
	ctx.font = "15px ''";
	ctx.font = "   15px ''";
	ctx.scale(0.2, 0.2);
	ctx.save();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1, 0, 0, 1, 200, 200);
	ctx.save();
	ctx.font = "   15px ''";
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1.68, 0, 0, 0.74, 4.59, 15.79);
	ctx.save();
	ctx.fillStyle = "rgb(172,166,61)";
	ctx.strokeStyle = "rgb(49,174,179)";
	ctx.lineWidth = 0.001;
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(-75.44106, -31.9001);
	ctx.bezierCurveTo(
		-75.44106,
		-55.947109999999995,
		-66.88838,
		-75.44106,
		-56.33810999999999,
		-75.44106
	);
	ctx.lineTo(56.33811000000001, -75.44106);
	ctx.lineTo(56.33811000000001, -75.44106);
	ctx.bezierCurveTo(
		66.88838000000001,
		-75.44106,
		75.44106000000001,
		-55.947109999999995,
		75.44106000000001,
		-31.900099999999995
	);
	ctx.lineTo(75.44106000000001, 31.900100000000002);
	ctx.lineTo(75.44106000000001, 31.900100000000002);
	ctx.bezierCurveTo(
		75.44106000000001,
		55.94711,
		66.88838000000001,
		75.44106,
		56.33811000000001,
		75.44106
	);
	ctx.lineTo(-56.33810999999999, 75.44106);
	ctx.lineTo(-56.33810999999999, 75.44106);
	ctx.bezierCurveTo(
		-66.88838,
		75.44106,
		-75.44106,
		55.947109999999995,
		-75.44106,
		31.900099999999995
	);
	ctx.closePath();
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(0.84, 0, 0, 1, -128.06, -39.66);
	ctx.save();
	ctx.fillStyle = "rgb(172,166,61)";
	ctx.strokeStyle = "rgb(118,56,26)";
	ctx.lineWidth = 0.001;
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(0, -51.4598);
	ctx.bezierCurveTo(28.40581, -51.4598, 51.4598, -28.405810000000002, 51.4598, 0);
	ctx.bezierCurveTo(51.4598, 28.40581, 28.405810000000002, 51.4598, 0, 51.4598);
	ctx.bezierCurveTo(-28.40581, 51.4598, -51.4598, 28.405810000000002, -51.4598, 0);
	ctx.bezierCurveTo(-51.4598, -28.40581, -28.405810000000002, -51.4598, 0, -51.4598);
	ctx.closePath();
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(0.14, 0, 0, 0.14, -145.79, -62.15);
	ctx.save();
	ctx.fillStyle = "rgb(0,0,0)";
	ctx.strokeStyle = "rgb(155,47,28)";
	ctx.lineWidth = 0.001;
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(0, -24.98048);
	ctx.bezierCurveTo(13.78923, -24.98048, 24.98048, -13.78922, 24.98048, 0);
	ctx.bezierCurveTo(24.98048, 13.78923, 13.78922, 24.98048, 0, 24.98048);
	ctx.bezierCurveTo(-13.78923, 24.98048, -24.98048, 13.78922, -24.98048, 0);
	ctx.bezierCurveTo(-24.98048, -13.78923, -13.78922, -24.98048, 0, -24.98048);
	ctx.closePath();
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1, 0, 0, 1, 152.61, -61.08);
	ctx.save();
	ctx.fillStyle = "rgb(172,166,61)";
	ctx.strokeStyle = "rgb(0,0,0)";
	ctx.lineWidth = 0.001;
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(-24.10993, 46.103);
	ctx.bezierCurveTo(
		-24.10993,
		46.103,
		-2.626709999999999,
		36.11081,
		13.860410000000002,
		-7.355240000000002
	);
	ctx.bezierCurveTo(
		30.347530000000003,
		-50.82128,
		24.35221,
		-50.321670000000005,
		24.35221,
		-50.321670000000005
	);
	ctx.bezierCurveTo(
		24.35221,
		-50.321670000000005,
		26.350649999999998,
		-26.840020000000006,
		24.35221,
		-20.844700000000003
	);
	ctx.bezierCurveTo(
		22.35377,
		-14.849380000000004,
		1.3701599999999985,
		36.610409999999995,
		-14.617350000000002,
		46.102999999999994
	);
	ctx.bezierCurveTo(
		-30.604860000000002,
		55.59558,
		-24.10994,
		46.102999999999994,
		-24.10994,
		46.102999999999994
	);
	ctx.closePath();
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1, 0, 0, 1, 178.03, -103.55);
	ctx.save();
	ctx.fillStyle = "rgb(0,0,0)";
	ctx.strokeStyle = "rgb(0,0,0)";
	ctx.lineCap = "round";
	ctx.lineJoin = "round";
	ctx.miterLimit = "10";
	ctx.font = "   15px ''";
	ctx.translate(-538.33, -182.32);
	ctx.beginPath();
	ctx.moveTo(540.328868852459, 191.8111155597239);
	ctx.quadraticCurveTo(540.327868852459, 191.8111155597239, 540.0780640124902, 191.8111155597239);
	ctx.quadraticCurveTo(539.8282591725215, 191.8111155597239, 539.5784543325527, 191.8111155597239);
	ctx.quadraticCurveTo(539.328649492584, 191.8111155597239, 539.0788446526152, 191.8111155597239);
	ctx.quadraticCurveTo(538.8290398126464, 191.8111155597239, 538.5792349726776, 191.8111155597239);
	ctx.quadraticCurveTo(538.3294301327088, 191.8111155597239, 537.8298204527713, 191.8111155597239);
	ctx.quadraticCurveTo(537.3302107728338, 191.8111155597239, 536.8306010928961, 191.8111155597239);
	ctx.quadraticCurveTo(536.3309914129586, 191.8111155597239, 536.0811865729898, 191.8111155597239);
	ctx.quadraticCurveTo(535.8313817330211, 191.8111155597239, 535.5815768930523, 191.8111155597239);
	ctx.quadraticCurveTo(535.3317720530836, 191.8111155597239, 535.0819672131148, 191.8111155597239);
	ctx.quadraticCurveTo(534.832162373146, 191.8111155597239, 534.5823575331772, 191.8111155597239);
	ctx.quadraticCurveTo(534.3325526932084, 191.8111155597239, 534.0827478532397, 191.8111155597239);
	ctx.quadraticCurveTo(533.8329430132709, 191.8111155597239, 533.8329430132709, 191.5613107197551);
	ctx.quadraticCurveTo(
		533.8329430132709,
		191.31150587978635,
		533.5831381733021,
		191.31150587978635
	);
	ctx.quadraticCurveTo(
		533.3333333333334,
		191.31150587978635,
		533.0835284933646,
		191.31150587978635
	);
	ctx.quadraticCurveTo(532.8337236533959, 191.31150587978635, 532.5839188134271, 191.0617010398176);
	ctx.quadraticCurveTo(532.3341139734582, 190.8118961998488, 532.0843091334895, 190.56209135988001);
	ctx.quadraticCurveTo(531.8345042935207, 190.31228651991125, 531.8345042935207, 190.0624816799425);
	ctx.quadraticCurveTo(531.8345042935207, 189.8126768399737, 531.8345042935207, 189.31306716003616);
	ctx.quadraticCurveTo(531.8345042935207, 188.8134574800986, 531.8345042935207, 188.31384780016106);
	ctx.quadraticCurveTo(531.8345042935207, 187.8142381202235, 531.8345042935207, 187.0648236003172);
	ctx.quadraticCurveTo(
		531.8345042935207,
		186.31540908041086,
		532.0843091334895,
		185.56599456050452
	);
	ctx.quadraticCurveTo(532.3341139734582, 184.8165800405982, 532.3341139734582, 183.8173606807231);
	ctx.quadraticCurveTo(532.3341139734582, 182.818141320848, 532.5839188134271, 182.0687268009417);
	ctx.quadraticCurveTo(
		532.8337236533959,
		181.31931228103537,
		532.8337236533959,
		180.32009292116027
	);
	ctx.quadraticCurveTo(532.8337236533959, 179.32087356128517, 533.0835284933646, 179.0710687213164);
	ctx.quadraticCurveTo(
		533.3333333333334,
		178.82126388134762,
		533.3333333333334,
		178.57145904137883
	);
	ctx.quadraticCurveTo(
		533.3333333333334,
		178.32165420141007,
		533.3333333333334,
		178.82126388134762
	);
	ctx.quadraticCurveTo(
		533.3333333333334,
		179.32087356128517,
		533.0835284933646,
		179.57067840125393
	);
	ctx.quadraticCurveTo(532.8337236533959, 179.82048324122272, 532.8337236533959, 180.0702880811915);
	ctx.quadraticCurveTo(
		532.8337236533959,
		180.32009292116027,
		532.5839188134271,
		180.32009292116027
	);
	ctx.quadraticCurveTo(
		532.3341139734582,
		180.32009292116027,
		532.3341139734582,
		180.56989776112903
	);
	ctx.quadraticCurveTo(
		532.3341139734582,
		180.81970260109782,
		532.3341139734582,
		180.56989776112903
	);
	ctx.quadraticCurveTo(532.3341139734582, 180.32009292116027, 532.3341139734582, 180.0702880811915);
	ctx.quadraticCurveTo(
		532.3341139734582,
		179.82048324122272,
		532.8337236533957,
		179.57067840125393
	);
	ctx.quadraticCurveTo(
		533.3333333333334,
		179.32087356128517,
		533.5831381733021,
		178.82126388134762
	);
	ctx.quadraticCurveTo(533.8329430132709, 178.32165420141007, 534.3325526932085, 178.0718493614413);
	ctx.quadraticCurveTo(534.832162373146, 177.82204452147252, 535.0819672131148, 177.82204452147252);
	ctx.quadraticCurveTo(
		535.3317720530836,
		177.82204452147252,
		535.5815768930523,
		177.57223968150373
	);
	ctx.quadraticCurveTo(
		535.8313817330211,
		177.32243484153497,
		536.0811865729898,
		177.32243484153497
	);
	ctx.quadraticCurveTo(
		536.3309914129586,
		177.32243484153497,
		536.8306010928961,
		176.82282516159742
	);
	ctx.quadraticCurveTo(
		537.3302107728338,
		176.32321548165987,
		537.5800156128025,
		175.82360580172232
	);
	ctx.quadraticCurveTo(
		537.8298204527713,
		175.32399612178477,
		538.5792349726776,
		174.82438644184722
	);
	ctx.quadraticCurveTo(539.328649492584, 174.32477676190967, 539.8282591725215, 173.82516708197213);
	ctx.quadraticCurveTo(540.327868852459, 173.32555740203458, 540.8274785323965, 173.07575256206582);
	ctx.quadraticCurveTo(
		541.3270882123342,
		172.82594772209703,
		541.5768930523029,
		172.82594772209703
	);
	ctx.quadraticCurveTo(
		541.8266978922717,
		172.82594772209703,
		542.0765027322404,
		172.82594772209703
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		172.82594772209703,
		542.3263075722092,
		173.07575256206582
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		173.32555740203458,
		542.3263075722092,
		173.82516708197213
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		174.32477676190967,
		542.3263075722092,
		174.82438644184722
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		175.32399612178477,
		542.3263075722092,
		175.57380096175353
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		175.82360580172232,
		542.0765027322404,
		176.32321548165987
	);
	ctx.quadraticCurveTo(541.8266978922717, 176.82282516159742, 541.5768930523029, 177.0726300015662);
	ctx.quadraticCurveTo(
		541.3270882123342,
		177.32243484153497,
		541.0772833723654,
		177.32243484153497
	);
	ctx.quadraticCurveTo(
		540.8274785323966,
		177.32243484153497,
		540.8274785323966,
		177.57223968150373
	);
	ctx.quadraticCurveTo(
		540.8274785323966,
		177.82204452147252,
		540.5776736924279,
		177.82204452147252
	);
	ctx.quadraticCurveTo(540.327868852459, 177.82204452147252, 540.0780640124902, 178.0718493614413);
	ctx.quadraticCurveTo(
		539.8282591725215,
		178.32165420141007,
		539.8282591725215,
		178.57145904137883
	);
	ctx.quadraticCurveTo(
		539.8282591725215,
		178.82126388134762,
		540.0780640124902,
		178.82126388134762
	);
	ctx.quadraticCurveTo(540.327868852459, 178.82126388134762, 540.8274785323965, 178.82126388134762);
	ctx.quadraticCurveTo(
		541.3270882123342,
		178.82126388134762,
		541.8266978922717,
		178.82126388134762
	);
	ctx.quadraticCurveTo(
		542.3263075722092,
		178.82126388134762,
		543.0757220921155,
		178.82126388134762
	);
	ctx.quadraticCurveTo(
		543.8251366120219,
		178.82126388134762,
		544.0749414519906,
		178.82126388134762
	);
	ctx.quadraticCurveTo(
		544.3247462919594,
		178.82126388134762,
		544.5745511319283,
		178.82126388134762
	);
	ctx.quadraticCurveTo(544.824355971897, 178.82126388134762, 544.824355971897, 179.0710687213164);
	ctx.quadraticCurveTo(544.824355971897, 179.32087356128517, 544.824355971897, 179.57067840125393);
	ctx.quadraticCurveTo(544.824355971897, 179.82048324122272, 544.824355971897, 180.0702880811915);
	ctx.quadraticCurveTo(544.824355971897, 180.32009292116027, 544.5745511319283, 180.56989776112903);
	ctx.quadraticCurveTo(544.3247462919594, 180.81970260109782, 544.0749414519906, 181.0695074410666);
	ctx.quadraticCurveTo(
		543.8251366120219,
		181.31931228103537,
		543.5753317720531,
		181.31931228103537
	);
	ctx.quadraticCurveTo(
		543.3255269320844,
		181.31931228103537,
		543.0757220921156,
		181.56911712100413
	);
	ctx.quadraticCurveTo(542.8259172521468, 181.81892196097292, 542.576112412178, 181.81892196097292);
	ctx.quadraticCurveTo(542.3263075722092, 181.81892196097292, 542.3263075722092, 182.0687268009417);
	ctx.quadraticCurveTo(
		542.3263075722092,
		182.31853164091046,
		542.0765027322404,
		182.56833648087922
	);
	ctx.quadraticCurveTo(541.8266978922717, 182.818141320848, 542.0765027322404, 182.818141320848);
	ctx.quadraticCurveTo(542.3263075722092, 182.818141320848, 542.576112412178, 182.818141320848);
	ctx.quadraticCurveTo(542.8259172521468, 182.818141320848, 543.0757220921156, 182.818141320848);
	ctx.quadraticCurveTo(543.3255269320844, 182.818141320848, 543.5753317720531, 182.818141320848);
	ctx.quadraticCurveTo(543.8251366120219, 182.818141320848, 543.8251366120219, 183.0679461608168);
	ctx.quadraticCurveTo(
		543.8251366120219,
		183.31775100078556,
		543.8251366120219,
		183.56755584075432
	);
	ctx.quadraticCurveTo(543.8251366120219, 183.8173606807231, 543.8251366120219, 184.31697036066066);
	ctx.quadraticCurveTo(543.8251366120219, 184.8165800405982, 543.8251366120219, 185.066384880567);
	ctx.quadraticCurveTo(
		543.8251366120219,
		185.31618972053576,
		543.5753317720531,
		185.56599456050452
	);
	ctx.quadraticCurveTo(543.3255269320844, 185.8157994004733, 543.0757220921156, 185.8157994004733);
	ctx.quadraticCurveTo(542.8259172521468, 185.8157994004733, 542.8259172521468, 186.0656042404421);
	ctx.quadraticCurveTo(542.8259172521468, 186.31540908041086, 542.8259172521468, 186.8150187603484);
	ctx.quadraticCurveTo(542.8259172521468, 187.31462844028596, 542.8259172521468, 187.8142381202235);
	ctx.quadraticCurveTo(542.8259172521468, 188.31384780016106, 542.576112412178, 188.8134574800986);
	ctx.quadraticCurveTo(542.3263075722092, 189.31306716003616, 542.3263075722092, 189.8126768399737);
	ctx.quadraticCurveTo(
		542.3263075722092,
		190.31228651991125,
		542.0765027322404,
		190.56209135988001
	);
	ctx.quadraticCurveTo(541.8266978922717, 190.8118961998488, 541.8266978922717, 191.0617010398176);
	ctx.quadraticCurveTo(
		541.8266978922717,
		191.31150587978635,
		541.5768930523029,
		191.31150587978635
	);
	ctx.quadraticCurveTo(
		541.3270882123342,
		191.31150587978635,
		541.0772833723654,
		191.31150587978635
	);
	ctx.quadraticCurveTo(
		540.8274785323966,
		191.31150587978635,
		540.5776736924279,
		191.31150587978635
	);
	ctx.quadraticCurveTo(540.327868852459, 191.31150587978635, 540.0780640124902, 191.31150587978635);
	ctx.quadraticCurveTo(539.8282591725215, 191.31150587978635, 539.328649492584, 191.31150587978635);
	ctx.lineTo(538.8280398126465, 191.31150587978635);
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1, 0, 0, 1, -94.88, -65.64);
	ctx.save();
	ctx.fillStyle = "rgb(128,79,36)";
	ctx.strokeStyle = "rgb(0,0,0)";
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(4.73404, 43.48807);
	ctx.bezierCurveTo(4.73404, 43.48807, 47.20086, 50.48261, 45.70203, 40.99002);
	ctx.bezierCurveTo(44.2032, 31.49744, 33.21179, 23.503680000000003, 23.21959, 23.503680000000003);
	ctx.bezierCurveTo(
		13.2274,
		23.503680000000003,
		9.23052,
		23.503680000000003,
		9.23052,
		23.503680000000003
	);
	ctx.bezierCurveTo(
		9.23052,
		23.503680000000003,
		64.18758,
		2.411570000000001,
		54.695,
		-3.0841299999999983
	);
	ctx.bezierCurveTo(
		45.202420000000004,
		-8.579839999999997,
		18.223489999999998,
		-8.51034,
		12.727789999999999,
		-5.512679999999998
	);
	ctx.bezierCurveTo(
		7.232079999999999,
		-2.5150199999999976,
		48.20484,
		-27.4955,
		36.71382,
		-34.49004
	);
	ctx.bezierCurveTo(25.2228, -41.48458, 9.730139999999999, -40.48536, 4.734039999999997, -34.49004);
	ctx.bezierCurveTo(
		-0.2620600000000035,
		-28.49472,
		-5.258150000000004,
		-21.9608,
		-5.258150000000004,
		-21.9608
	);
	ctx.bezierCurveTo(
		-5.258150000000004,
		-21.9608,
		11.228969999999997,
		-49.47804,
		4.734039999999997,
		-54.47413
	);
	ctx.bezierCurveTo(
		-1.7608900000000034,
		-59.47023,
		-21.745270000000005,
		-50.43855,
		-23.743710000000004,
		-41.94518
	);
	ctx.bezierCurveTo(
		-25.742150000000002,
		-33.45182,
		-26.241760000000003,
		-25.45806,
		-26.241760000000003,
		-25.45806
	);
	ctx.bezierCurveTo(
		-26.241760000000003,
		-25.45806,
		-26.741370000000003,
		-76.45695,
		-43.7281,
		-54.47413
	);
	ctx.bezierCurveTo(
		-60.71483,
		-32.4913,
		-55.718729999999994,
		-26.95689,
		-52.72107,
		-19.962360000000004
	);
	ctx.bezierCurveTo(
		-49.723409999999994,
		-12.967820000000003,
		-38.732,
		-27.956110000000002,
		-31.73746,
		-21.960800000000003
	);
	ctx.bezierCurveTo(
		-24.742919999999998,
		-15.965480000000003,
		-13.2519,
		-16.004490000000004,
		-11.253459999999997,
		-2.015410000000003
	);
	ctx.bezierCurveTo(
		-9.255019999999996,
		11.973659999999997,
		5.233660000000004,
		23.00408,
		0.23756000000000377,
		34.495099999999994
	);
	ctx.bezierCurveTo(
		-4.758539999999996,
		45.98611999999999,
		-2.7600999999999964,
		53.979879999999994,
		-5.258149999999996,
		59.97519
	);
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.restore();
	ctx.restore();
	ctx.save();
	ctx.font = "   15px ''";
	ctx.transform(1, 0, 0, 1, 46.93, 187.72);
	ctx.save();
	ctx.fillStyle = "rgb(255,255,255)";
	ctx.fillStyle = "rgba(255, 255, 255, 0)";
	ctx.strokeStyle = "rgb(0,0,0)";
	ctx.miterLimit = "4";
	ctx.font = "   15px ''";
	ctx.beginPath();
	ctx.moveTo(-7.45614, 3.94737);
	ctx.bezierCurveTo(-7.45614, 3.94737, 1.315789999999999, 1.75439, 7.45614, -3.94737);
	ctx.fill("nonzero");
	ctx.stroke();
	ctx.restore();
	ctx.restore();
	ctx.restore();
	up = true;
	var rotation = 0;
	ctx.fillStyle = "rgb(172, 166, 61)";
	function draw() {
		ctx.save();
		ctx.translate(22.5, 55);
		ctx.clearRect(-4, -5, 8, 12);
		ctx.rotate(rotation);
		ctx.fillRect(-2.5, -5, 5, 11);
		ctx.restore();

		ctx.save();
		ctx.translate(30.5, 55);
		ctx.clearRect(-4, -5, 8, 12);
		ctx.rotate(rotation);
		ctx.fillRect(-2.5, -5, 5, 11);
		ctx.restore();

		ctx.save();
		ctx.translate(52.5, 55);
		ctx.clearRect(-4, -5, 8, 12);
		ctx.rotate(rotation);
		ctx.fillRect(-2.5, -5, 5, 11);
		ctx.restore();
		ctx.save();

		ctx.save();
		ctx.translate(60.5, 55);
		ctx.clearRect(-4, -5, 8, 12);
		ctx.rotate(rotation);
		ctx.fillRect(-2.5, -5, 5, 11);
		ctx.restore();

		ctx.strokeStyle = "rgba(0,0,0,0)";
		ctx.miterLimit = 4;
		ctx.font = "15px ''";
		ctx.font = "   15px ''";
		ctx.scale(0.2, 0.2);
		ctx.save();
		ctx.restore();
		ctx.save();
		ctx.font = "   15px ''";
		ctx.transform(1.68, 0, 0, 0.74, 204.59, 215.79);
		ctx.save();
		ctx.fillStyle = "rgb(172,166,61)";
		ctx.strokeStyle = "rgb(49,174,179)";
		ctx.lineWidth = 0.001;
		ctx.miterLimit = "4";
		ctx.font = "   15px ''";
		ctx.beginPath();
		ctx.moveTo(-75.44106, -31.9001);
		ctx.bezierCurveTo(
			-75.44106,
			-55.947109999999995,
			-66.88838,
			-75.44106,
			-56.33810999999999,
			-75.44106
		);
		ctx.lineTo(56.33811000000001, -75.44106);
		ctx.lineTo(56.33811000000001, -75.44106);
		ctx.bezierCurveTo(
			66.88838000000001,
			-75.44106,
			75.44106000000001,
			-55.947109999999995,
			75.44106000000001,
			-31.900099999999995
		);
		ctx.lineTo(75.44106000000001, 31.900100000000002);
		ctx.lineTo(75.44106000000001, 31.900100000000002);
		ctx.bezierCurveTo(
			75.44106000000001,
			55.94711,
			66.88838000000001,
			75.44106,
			56.33811000000001,
			75.44106
		);
		ctx.lineTo(-56.33810999999999, 75.44106);
		ctx.lineTo(-56.33810999999999, 75.44106);
		ctx.bezierCurveTo(
			-66.88838,
			75.44106,
			-75.44106,
			55.947109999999995,
			-75.44106,
			31.900099999999995
		);
		ctx.closePath();
		ctx.fill("nonzero");
		ctx.stroke();
		ctx.restore();
		ctx.restore();
		ctx.save();
		ctx.font = "   15px ''";
		ctx.transform(1, 0, 0, 1, 105.12, 134.36);
		ctx.save();
		ctx.fillStyle = "rgb(128,79,36)";
		ctx.strokeStyle = "rgb(0,0,0)";
		ctx.miterLimit = "4";
		ctx.font = "   15px ''";
		ctx.beginPath();
		ctx.moveTo(4.73404, 43.48807);
		ctx.bezierCurveTo(4.73404, 43.48807, 47.20086, 50.48261, 45.70203, 40.99002);
		ctx.bezierCurveTo(
			44.2032,
			31.49744,
			33.21179,
			23.503680000000003,
			23.21959,
			23.503680000000003
		);
		ctx.bezierCurveTo(
			13.2274,
			23.503680000000003,
			9.23052,
			23.503680000000003,
			9.23052,
			23.503680000000003
		);
		ctx.bezierCurveTo(
			9.23052,
			23.503680000000003,
			64.18758,
			2.411570000000001,
			54.695,
			-3.0841299999999983
		);
		ctx.bezierCurveTo(
			45.202420000000004,
			-8.579839999999997,
			18.223489999999998,
			-8.51034,
			12.727789999999999,
			-5.512679999999998
		);
		ctx.bezierCurveTo(
			7.232079999999999,
			-2.5150199999999976,
			48.20484,
			-27.4955,
			36.71382,
			-34.49004
		);
		ctx.bezierCurveTo(
			25.2228,
			-41.48458,
			9.730139999999999,
			-40.48536,
			4.734039999999997,
			-34.49004
		);
		ctx.bezierCurveTo(
			-0.2620600000000035,
			-28.49472,
			-5.258150000000004,
			-21.9608,
			-5.258150000000004,
			-21.9608
		);
		ctx.bezierCurveTo(
			-5.258150000000004,
			-21.9608,
			11.228969999999997,
			-49.47804,
			4.734039999999997,
			-54.47413
		);
		ctx.bezierCurveTo(
			-1.7608900000000034,
			-59.47023,
			-21.745270000000005,
			-50.43855,
			-23.743710000000004,
			-41.94518
		);
		ctx.bezierCurveTo(
			-25.742150000000002,
			-33.45182,
			-26.241760000000003,
			-25.45806,
			-26.241760000000003,
			-25.45806
		);
		ctx.bezierCurveTo(
			-26.241760000000003,
			-25.45806,
			-26.741370000000003,
			-76.45695,
			-43.7281,
			-54.47413
		);
		ctx.bezierCurveTo(
			-60.71483,
			-32.4913,
			-55.718729999999994,
			-26.95689,
			-52.72107,
			-19.962360000000004
		);
		ctx.bezierCurveTo(
			-49.723409999999994,
			-12.967820000000003,
			-38.732,
			-27.956110000000002,
			-31.73746,
			-21.960800000000003
		);
		ctx.bezierCurveTo(
			-24.742919999999998,
			-15.965480000000003,
			-13.2519,
			-16.004490000000004,
			-11.253459999999997,
			-2.015410000000003
		);
		ctx.bezierCurveTo(
			-9.255019999999996,
			11.973659999999997,
			5.233660000000004,
			23.00408,
			0.23756000000000377,
			34.495099999999994
		);
		ctx.bezierCurveTo(
			-4.758539999999996,
			45.98611999999999,
			-2.7600999999999964,
			53.979879999999994,
			-5.258149999999996,
			59.97519
		);
		ctx.fill("nonzero");
		ctx.stroke();
		ctx.restore();
		ctx.restore();
		ctx.restore();
		if (up) {
			if (rotation >= 0.2) {
				up = false;
			} else {
				rotation += 0.08;
			}
		} else {
			if (rotation <= -0.2) {
				up = true;
			} else {
				rotation -= 0.08;
			}
		}
		requestID = requestAnimationFrame(draw);
	}
	requestAnimationFrame(draw);
}
drawLion(canvas.width / 80);
